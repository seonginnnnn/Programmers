#include <string>
#include <vector>

using namespace std;

string solution(string new_id) {
    string answer = "";
    for (int i = 0; i < new_id.size(); i++)
    {
        if (new_id[i] >= 'a' && new_id[i] <= 'z')
            answer += new_id[i];
        else if (new_id[i] >= '0' && new_id[i] <= '9')
            answer += new_id[i];
        else if (new_id[i] >= 'A' && new_id[i] <= 'Z')
            answer += new_id[i]-('A'-'a');
        else if (new_id[i] == '-' || new_id[i] == '_')
            answer += new_id[i];
        else if (new_id[i] == '.' && answer.size() != 0 && answer[answer.size()-1] != '.')
            answer += new_id[i];
    }

    answer = answer.substr(0,15);
    while (true)
    {
        int size = answer.size();
        if (answer[size-1] != '.')
            break;
        else
            answer = answer.substr(0,size-1);
    }
    if (answer.size() == 0)
        answer += "aaa";
    else if (answer.size() < 3)
    {
        int d = answer.size();
        for (int i = 0; i < 3-d; i++)
            answer += answer[answer.size()-1];
    }
    return answer;
}

/*
다른 사람의 풀이
#include <bits/stdc++.h>
using namespace std;

string solution(string new_id) {
    for (char& ch : new_id) if ('A' <= ch && ch <= 'Z') ch |= 32;

    string ret;
    for (char& ch: new_id) {
        if ('a' <= ch && ch <= 'z' ||
            '0' <= ch && ch <= '9' ||
            strchr("-_.", ch)) ret += ch;
    }

    new_id = ret;
    ret.clear();
    for (char& ch: new_id) {
        if (!ret.empty() && ret.back() == '.' && ch == '.') continue;
        ret += ch;
    }

    if (ret.front() == '.') ret.erase(ret.begin());
    if (ret.back() == '.') ret.pop_back();

    if (ret.empty()) ret = "a";
    if (ret.size() >= 16) ret = ret.substr(0, 15);
    if (ret.back() == '.') ret.pop_back();
    while (ret.size() <= 2) ret += ret.back();

    return ret;
}
*/